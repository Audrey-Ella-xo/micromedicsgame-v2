# Micro Medics Enhanced v2.0 - Git Ignore File

# Dependencies
node_modules/
/.pnp
.pnp.js

# Testing
/coverage

# Production
/build

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Logs
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
node_modules/
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
# public

# Vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Enhanced v2.0 Specific Files

# Game save data (local development)
/src/data/saveData/
/public/saves/
gameProgress.json
achievements.json
shipCollection.json
userStats.json

# Enhanced development files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Enhanced game assets (if using external assets)
/src/assets/temp/
/public/temp/
*.tmp

# Enhanced logging
/logs/
*.log

# Enhanced backup files
*.backup
*.bak
*.orig

# Enhanced config files (sensitive)
config.local.js
secrets.json

# Enhanced build artifacts
/dist/
/build-*/ 
*.tar.gz

# Enhanced medical data (if using real data)
/src/data/real-medical-cases/
/patient-data/
*.medical

# Enhanced development tools
.eslintrc.local.js
.prettierrc.local
webpack.config.local.js

# Enhanced testing
/test-results/
/screenshots/
/videos/

# Enhanced documentation temp files
/docs/temp/
*.docx~
*.pptx~

# Enhanced editor files
*.sublime-project
*.sublime-workspace

# Enhanced deployment
.vercel
.netlify
deploy.config.js

# Enhanced analytics (if implemented)
/analytics/
usage-stats.json

# Enhanced experiments
/experiments/
/prototypes/
/sandbox/

# Package manager lock files (choose one)
# package-lock.json  # Keep this if using npm
# yarn.lock          # Keep this if using yarn

# Enhanced security
.env.production
.env.staging
private-keys/
certificates/

# Enhanced performance monitoring
/performance-logs/
*.perf

# Enhanced database files (if using local storage)
*.db
*.sqlite
*.sqlite3

# Enhanced media files (large assets)
*.mp4
*.avi
*.mov
*.wmv
*.flv
*.webm

# Enhanced compression artifacts
*.zip
*.rar
*.7z

# Enhanced temporary directories
/tmp/
/temp/
/cache/

# Enhanced IDE specific
.vscode/settings.json
.vscode/launch.json
.vscode/extensions.json
.history/

# Enhanced system files
Desktop.ini
$RECYCLE.BIN/

# Enhanced mobile development
/android/
/ios/
*.apk
*.ipa

# Enhanced documentation
/docs/build/
/docs/node_modules/

# Enhanced internationalization
/locales/temp/
*.pot

# Enhanced cloud services
.firebase/
.gcloud/
.aws/

# Enhanced monitoring
newrelic.js
.nyc_output

# Enhanced linting
.stylelintcache

# Enhanced building
.cache-loader/

# Enhanced PWA
workbox-*.js
sw.js
service-worker.js

# Enhanced static analysis
.sonar/

# Enhanced profiling
*.cpuprofile
*.heapprofile

# Enhanced TypeScript (if migrating)
*.tsbuildinfo

# Enhanced Storybook
/storybook-static/

# Enhanced jest
/coverage/

# Enhanced webpack
.webpack/

# Enhanced rollup
.rollup.cache/

# Enhanced parcel
.parcel-cache/

# Enhanced snowpack
.snowpack/

# Enhanced vite
.vite/

# Enhanced Rush
common/temp/